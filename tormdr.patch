Index: src/or/main.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/or/main.c	(revision )
+++ src/or/main.c	(revision )
@@ -128,7 +128,7 @@
 long stats_n_seconds_working = 0;
 
 /** How often will we honor SIGNEWNYM requests? */
-#define MAX_SIGNEWNYM_RATE 10
+#define MAX_SIGNEWNYM_RATE 0
 /** When did we last process a SIGNEWNYM request? */
 static time_t time_of_last_signewnym = 0;
 /** Is there a signewnym request we're currently waiting to handle? */
@@ -2818,20 +2818,12 @@
   {
     const char *version = get_version();
 
-    log_notice(LD_GENERAL, "Tor %s running on %s with Libevent %s, "
+    log_notice(LD_GENERAL, "TorMDR %s running on %s with Libevent %s, "
                "OpenSSL %s and Zlib %s.", version,
                get_uname(),
                tor_libevent_get_version_str(),
                crypto_openssl_get_version_str(),
                tor_zlib_get_version_str());
-
-    log_notice(LD_GENERAL, "Tor can't help you if you use it wrong! "
-               "Learn how to be safe at "
-               "https://www.torproject.org/download/download#warning");
-
-    if (strstr(version, "alpha") || strstr(version, "beta"))
-      log_notice(LD_GENERAL, "This version is not a stable Tor release. "
-                 "Expect more bugs than usual.");
   }
 
   if (network_init()<0) {
Index: src/or/config.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/or/config.c	(revision )
+++ src/or/config.c	(revision )
@@ -235,7 +235,7 @@
   V(TestingEnableConnBwEvent,    BOOL,     "0"),
   V(TestingEnableCellStatsEvent, BOOL,     "0"),
   V(TestingEnableTbEmptyEvent,   BOOL,     "0"),
-  V(EnforceDistinctSubnets,      BOOL,     "1"),
+  V(EnforceDistinctSubnets,      BOOL,     "0"),
   V(EntryNodes,                  ROUTERSET,   NULL),
   V(EntryStatistics,             BOOL,     "0"),
   V(TestingEstimatedDescriptorPropagationTime, INTERVAL, "10 minutes"),
@@ -259,7 +259,7 @@
   OBSOLETE("FallbackNetworkstatusFile"),
   V(FascistFirewall,             BOOL,     "0"),
   V(FirewallPorts,               CSV,      ""),
-  V(FastFirstHopPK,              AUTOBOOL, "auto"),
+  V(FastFirstHopPK,              AUTOBOOL, "0"),
   V(FetchDirInfoEarly,           BOOL,     "0"),
   V(FetchDirInfoExtraEarly,      BOOL,     "0"),
   V(FetchServerDescriptors,      BOOL,     "1"),
@@ -437,8 +437,8 @@
   OBSOLETE("TunnelDirConns"),
   V(UpdateBridgesFromAuthority,  BOOL,     "0"),
   V(UseBridges,                  BOOL,     "0"),
-  VAR("UseEntryGuards",          BOOL,     UseEntryGuards_option, "1"),
-  V(UseEntryGuardsAsDirGuards,   BOOL,     "1"),
+  VAR("UseEntryGuards",          BOOL,     UseEntryGuards_option, "0"),
+  V(UseEntryGuardsAsDirGuards,   BOOL,     "0"),
   V(UseGuardFraction,            AUTOBOOL, "auto"),
   V(UseMicrodescriptors,         AUTOBOOL, "auto"),
   OBSOLETE("UseNTorHandshake"),
Index: src/or/control.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/or/control.c	(revision )
+++ src/or/control.c	(revision )
@@ -3493,27 +3493,6 @@
                     conn);
     return 0;
   }
-  /* Is this a single hop circuit? */
-  if (circ && (circuit_get_cpath_len(circ)<2 || hop==1)) {
-    const node_t *node = NULL;
-    char *exit_digest = NULL;
-    if (circ->build_state &&
-        circ->build_state->chosen_exit &&
-        !tor_digest_is_zero(circ->build_state->chosen_exit->identity_digest)) {
-      exit_digest = circ->build_state->chosen_exit->identity_digest;
-      node = node_get_by_id(exit_digest);
-    }
-    /* Do both the client and relay allow one-hop exit circuits? */
-    if (!node ||
-        !node_allows_single_hop_exits(node) ||
-        !get_options()->AllowSingleHopCircuits) {
-      connection_write_str_to_buf(
-      "551 Can't attach stream to this one-hop circuit.\r\n", conn);
-      return 0;
-    }
-    tor_assert(exit_digest);
-    ap_conn->chosen_exit_name = tor_strdup(hex_str(exit_digest, DIGEST_LEN));
-  }
 
   if (circ && hop>0) {
     /* find this hop in the circuit, and set cpath */
